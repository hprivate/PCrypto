"""
免责声明：
本脚本中的参数和题目来源于网络，仅用于个人学习和研究目的。如若侵权，请联系删除。
我们不对因使用此脚本而导致的任何直接或间接损害承担责任。
脚本由 ChatGPT 辅助编写
"""

# 在RSA加密和解密过程中，公钥由(𝑛,𝑒)组成，私钥由(𝑛,𝑑)组成，其中 𝑛=𝑝×𝑞。我们需要找到私钥的指数𝑑，然后使用它来解密消息。
# n = p*q
# ϕ(n)=(p−1)(q−1)

from sympy import mod_inverse

def rsa_generate_keys(p, q, e):
    # 计算 n
    n = p * q
    
    # 计算 φ(n)
    phi_n = (p - 1) * (q - 1)
    
    # 计算 d (e 在模 φ(n) 意义下的逆元)
    d = mod_inverse(e, phi_n)
    
    return n, d
    
def rsa_decrypt(n, d, c):
    # 使用私钥 (n, d) 解密消息 c
    m = pow(c, d, n)
    return m

# 给定参数
p = 9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483
q = 11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407
e = 65537

# 生成密钥对
n, d = rsa_generate_keys(p, q, e)
print(f"n: {n}")
print(f"d: {d}")

# 示例密文 (你可以替换成你的密文)
c = 83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034  # 示例密文，需要替换为实际密文

# 解密消息
decrypted_message = rsa_decrypt(n, d, c)
print("解密后的消息:", decrypted_message)